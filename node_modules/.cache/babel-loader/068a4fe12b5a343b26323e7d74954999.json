{"ast":null,"code":"var _jsxFileName = \"/home/jermaniac/projectGermanMain/webprojectREACT/webexpresssionproject/src/components/App.jsx\";\nimport React from 'react';\nimport InfoExpressions from './InfoComponent';\nimport '../styles/App.css';\nimport { changeExpressions, changePhoto } from '../redux/actionCreators';\nimport { connect } from 'react-redux';\nimport FormComponent from './FormComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    expressions: state.expressions,\n    photo: state.photo\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeExpressions: expressions => dispatch(changeExpressions(expressions)),\n  changePhoto: photo => dispatch(changePhoto(photo))\n});\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(FormComponent, {\n          changeExpressions: this.props.changeExpressions,\n          changePhoto: this.props.changePhoto,\n          photo: this.props.photo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(InfoExpressions, {\n          expressions: this.props.expressions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/jermaniac/projectGermanMain/webprojectREACT/webexpresssionproject/src/components/App.jsx"],"names":["React","InfoExpressions","changeExpressions","changePhoto","connect","FormComponent","mapStateToProps","state","expressions","photo","mapDispatchToProps","dispatch","App","Component","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,iBAA5B;AAEA,OAAO,mBAAP;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,yBAA/C;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAELC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AAFR,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,iBAAiB,EAAGM,WAAD,IAAiBG,QAAQ,CAACT,iBAAiB,CAACM,WAAD,CAAlB,CADN;AAEtCL,EAAAA,WAAW,EAAGM,KAAD,IAAWE,QAAQ,CAACR,WAAW,CAACM,KAAD,CAAZ;AAFM,CAAL,CAAnC;;AAKA,MAAMG,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAEhCC,EAAAA,MAAM,GAAI;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,iBAAiB,EAAE,KAAKC,KAAL,CAAWb,iBAA7C;AACA,UAAA,WAAW,EAAE,KAAKa,KAAL,CAAWZ,WADxB;AAEA,UAAA,KAAK,EAAE,KAAKY,KAAL,CAAWN;AAFlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,eAAD;AAAkB,UAAA,WAAW,EAAE,KAAKM,KAAL,CAAWP;AAA1C;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD;;AAd+B;;AAkBlC,eAAiBJ,OAAO,CAAGE,eAAH,EAAoBI,kBAApB,CAAP,CAAiDE,GAAjD,CAAjB","sourcesContent":["import React from 'react'\n\nimport InfoExpressions from './InfoComponent'\n\nimport '../styles/App.css'\nimport { changeExpressions, changePhoto } from '../redux/actionCreators';\n\nimport { connect } from 'react-redux'\nimport FormComponent from './FormComponent';\n\nconst mapStateToProps = state => {\n  return {\n    expressions: state.expressions,\n    photo: state.photo\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeExpressions: (expressions) => dispatch(changeExpressions(expressions)),\n  changePhoto: (photo) => dispatch(changePhoto(photo))\n});\n\nclass App extends React.Component {\n\n  render () {\n    return (\n        <div className=\"container\">\n          <div className=\"row\">\n              <FormComponent changeExpressions={this.props.changeExpressions}\n              changePhoto={this.props.changePhoto}\n              photo={this.props.photo}\n              ></FormComponent>\n              <InfoExpressions  expressions={this.props.expressions} ></InfoExpressions>\n          </div>\n        </div>\n    );\n  }\n\n}\n\nexport default ( connect ( mapStateToProps, mapDispatchToProps )( App ))"]},"metadata":{},"sourceType":"module"}